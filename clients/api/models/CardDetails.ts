/* tslint:disable */
/* eslint-disable */
/**
 * SBanken
 * SBanken Beta API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: rhuan@barreto.work
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CardDetails
 */
export interface CardDetails {
    /**
     * 
     * @type {string}
     * @memberof CardDetails
     */
    cardNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof CardDetails
     */
    currencyAmount: number;
    /**
     * 
     * @type {number}
     * @memberof CardDetails
     */
    currencyRate: number;
    /**
     * 
     * @type {string}
     * @memberof CardDetails
     */
    merchantCategoryCode?: string;
    /**
     * 
     * @type {string}
     * @memberof CardDetails
     */
    merchantCategoryDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof CardDetails
     */
    merchantCity?: string;
    /**
     * 
     * @type {string}
     * @memberof CardDetails
     */
    merchantName?: string;
    /**
     * 
     * @type {string}
     * @memberof CardDetails
     */
    originalCurrencyCode?: string;
    /**
     * 
     * @type {Date}
     * @memberof CardDetails
     */
    purchaseDate: Date;
    /**
     * 
     * @type {string}
     * @memberof CardDetails
     */
    transactionId?: string;
}

/**
 * Check if a given object implements the CardDetails interface.
 */
export function instanceOfCardDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "currencyAmount" in value;
    isInstance = isInstance && "currencyRate" in value;
    isInstance = isInstance && "purchaseDate" in value;

    return isInstance;
}

export function CardDetailsFromJSON(json: any): CardDetails {
    return CardDetailsFromJSONTyped(json, false);
}

export function CardDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CardDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cardNumber': !exists(json, 'cardNumber') ? undefined : json['cardNumber'],
        'currencyAmount': json['currencyAmount'],
        'currencyRate': json['currencyRate'],
        'merchantCategoryCode': !exists(json, 'merchantCategoryCode') ? undefined : json['merchantCategoryCode'],
        'merchantCategoryDescription': !exists(json, 'merchantCategoryDescription') ? undefined : json['merchantCategoryDescription'],
        'merchantCity': !exists(json, 'merchantCity') ? undefined : json['merchantCity'],
        'merchantName': !exists(json, 'merchantName') ? undefined : json['merchantName'],
        'originalCurrencyCode': !exists(json, 'originalCurrencyCode') ? undefined : json['originalCurrencyCode'],
        'purchaseDate': (new Date(json['purchaseDate'])),
        'transactionId': !exists(json, 'transactionId') ? undefined : json['transactionId'],
    };
}

export function CardDetailsToJSON(value?: CardDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cardNumber': value.cardNumber,
        'currencyAmount': value.currencyAmount,
        'currencyRate': value.currencyRate,
        'merchantCategoryCode': value.merchantCategoryCode,
        'merchantCategoryDescription': value.merchantCategoryDescription,
        'merchantCity': value.merchantCity,
        'merchantName': value.merchantName,
        'originalCurrencyCode': value.originalCurrencyCode,
        'purchaseDate': (value.purchaseDate.toISOString()),
        'transactionId': value.transactionId,
    };
}

