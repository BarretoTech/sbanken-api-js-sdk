/* tslint:disable */
/* eslint-disable */
/**
 * SBanken
 * SBanken Beta API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: rhuan@barreto.work
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransactionDetail
 */
export interface TransactionDetail {
    /**
     * 
     * @type {string}
     * @memberof TransactionDetail
     */
    formattedAccountNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof TransactionDetail
     */
    transactionId: number;
    /**
     * 
     * @type {string}
     * @memberof TransactionDetail
     */
    cid?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionDetail
     */
    amountDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionDetail
     */
    receiverName?: string;
    /**
     * 
     * @type {number}
     * @memberof TransactionDetail
     */
    numericReference: number;
    /**
     * 
     * @type {string}
     * @memberof TransactionDetail
     */
    payerName?: string;
    /**
     * 
     * @type {Date}
     * @memberof TransactionDetail
     */
    registrationDate?: Date;
}

/**
 * Check if a given object implements the TransactionDetail interface.
 */
export function instanceOfTransactionDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "transactionId" in value;
    isInstance = isInstance && "numericReference" in value;

    return isInstance;
}

export function TransactionDetailFromJSON(json: any): TransactionDetail {
    return TransactionDetailFromJSONTyped(json, false);
}

export function TransactionDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'formattedAccountNumber': !exists(json, 'formattedAccountNumber') ? undefined : json['formattedAccountNumber'],
        'transactionId': json['transactionId'],
        'cid': !exists(json, 'cid') ? undefined : json['cid'],
        'amountDescription': !exists(json, 'amountDescription') ? undefined : json['amountDescription'],
        'receiverName': !exists(json, 'receiverName') ? undefined : json['receiverName'],
        'numericReference': json['numericReference'],
        'payerName': !exists(json, 'payerName') ? undefined : json['payerName'],
        'registrationDate': !exists(json, 'registrationDate') ? undefined : (new Date(json['registrationDate'])),
    };
}

export function TransactionDetailToJSON(value?: TransactionDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'formattedAccountNumber': value.formattedAccountNumber,
        'transactionId': value.transactionId,
        'cid': value.cid,
        'amountDescription': value.amountDescription,
        'receiverName': value.receiverName,
        'numericReference': value.numericReference,
        'payerName': value.payerName,
        'registrationDate': value.registrationDate === undefined ? undefined : (value.registrationDate.toISOString()),
    };
}

