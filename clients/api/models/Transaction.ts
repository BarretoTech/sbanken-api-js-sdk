/* tslint:disable */
/* eslint-disable */
/**
 * SBanken
 * SBanken Beta API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: rhuan@barreto.work
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CardDetails } from './CardDetails';
import {
    CardDetailsFromJSON,
    CardDetailsFromJSONTyped,
    CardDetailsToJSON,
} from './CardDetails';
import type { ReservationType } from './ReservationType';
import {
    ReservationTypeFromJSON,
    ReservationTypeFromJSONTyped,
    ReservationTypeToJSON,
} from './ReservationType';
import type { SourceType } from './SourceType';
import {
    SourceTypeFromJSON,
    SourceTypeFromJSONTyped,
    SourceTypeToJSON,
} from './SourceType';
import type { TransactionDetail } from './TransactionDetail';
import {
    TransactionDetailFromJSON,
    TransactionDetailFromJSONTyped,
    TransactionDetailToJSON,
} from './TransactionDetail';

/**
 * 
 * @export
 * @interface Transaction
 */
export interface Transaction {
    /**
     * 
     * @type {Date}
     * @memberof Transaction
     */
    accountingDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof Transaction
     */
    interestDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    otherAccountNumber?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Transaction
     */
    otherAccountNumberSpecified: boolean;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    text?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    transactionType?: string;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    transactionTypeCode: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    transactionTypeText?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Transaction
     */
    isReservation: boolean;
    /**
     * 
     * @type {ReservationType}
     * @memberof Transaction
     */
    reservationType?: ReservationType;
    /**
     * 
     * @type {SourceType}
     * @memberof Transaction
     */
    source: SourceType;
    /**
     * 
     * @type {boolean}
     * @memberof Transaction
     */
    cardDetailsSpecified: boolean;
    /**
     * 
     * @type {CardDetails}
     * @memberof Transaction
     */
    cardDetails?: CardDetails;
    /**
     * 
     * @type {boolean}
     * @memberof Transaction
     */
    transactionDetailSpecified: boolean;
    /**
     * 
     * @type {TransactionDetail}
     * @memberof Transaction
     */
    transactionDetail?: TransactionDetail;
}

/**
 * Check if a given object implements the Transaction interface.
 */
export function instanceOfTransaction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accountingDate" in value;
    isInstance = isInstance && "otherAccountNumberSpecified" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "transactionTypeCode" in value;
    isInstance = isInstance && "isReservation" in value;
    isInstance = isInstance && "source" in value;
    isInstance = isInstance && "cardDetailsSpecified" in value;
    isInstance = isInstance && "transactionDetailSpecified" in value;

    return isInstance;
}

export function TransactionFromJSON(json: any): Transaction {
    return TransactionFromJSONTyped(json, false);
}

export function TransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountingDate': (new Date(json['accountingDate'])),
        'interestDate': !exists(json, 'interestDate') ? undefined : (new Date(json['interestDate'])),
        'otherAccountNumber': !exists(json, 'otherAccountNumber') ? undefined : json['otherAccountNumber'],
        'otherAccountNumberSpecified': json['otherAccountNumberSpecified'],
        'amount': json['amount'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'transactionType': !exists(json, 'transactionType') ? undefined : json['transactionType'],
        'transactionTypeCode': json['transactionTypeCode'],
        'transactionTypeText': !exists(json, 'transactionTypeText') ? undefined : json['transactionTypeText'],
        'isReservation': json['isReservation'],
        'reservationType': !exists(json, 'reservationType') ? undefined : ReservationTypeFromJSON(json['reservationType']),
        'source': SourceTypeFromJSON(json['source']),
        'cardDetailsSpecified': json['cardDetailsSpecified'],
        'cardDetails': !exists(json, 'cardDetails') ? undefined : CardDetailsFromJSON(json['cardDetails']),
        'transactionDetailSpecified': json['transactionDetailSpecified'],
        'transactionDetail': !exists(json, 'transactionDetail') ? undefined : TransactionDetailFromJSON(json['transactionDetail']),
    };
}

export function TransactionToJSON(value?: Transaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountingDate': (value.accountingDate.toISOString()),
        'interestDate': value.interestDate === undefined ? undefined : (value.interestDate.toISOString()),
        'otherAccountNumber': value.otherAccountNumber,
        'otherAccountNumberSpecified': value.otherAccountNumberSpecified,
        'amount': value.amount,
        'text': value.text,
        'transactionType': value.transactionType,
        'transactionTypeCode': value.transactionTypeCode,
        'transactionTypeText': value.transactionTypeText,
        'isReservation': value.isReservation,
        'reservationType': ReservationTypeToJSON(value.reservationType),
        'source': SourceTypeToJSON(value.source),
        'cardDetailsSpecified': value.cardDetailsSpecified,
        'cardDetails': CardDetailsToJSON(value.cardDetails),
        'transactionDetailSpecified': value.transactionDetailSpecified,
        'transactionDetail': TransactionDetailToJSON(value.transactionDetail),
    };
}

