/* tslint:disable */
/* eslint-disable */
/**
 * SBanken
 * SBanken Beta API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: rhuan@barreto.work
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NewStatusType } from './NewStatusType';
import {
    NewStatusTypeFromJSON,
    NewStatusTypeFromJSONTyped,
    NewStatusTypeToJSON,
} from './NewStatusType';

/**
 * 
 * @export
 * @interface Payment
 */
export interface Payment {
    /**
     * 
     * @type {string}
     * @memberof Payment
     */
    paymentId?: string;
    /**
     * 
     * @type {string}
     * @memberof Payment
     */
    recipientAccountNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof Payment
     */
    amount: number;
    /**
     * 
     * @type {Date}
     * @memberof Payment
     */
    dueDate: Date;
    /**
     * 
     * @type {string}
     * @memberof Payment
     */
    kid?: string;
    /**
     * 
     * @type {string}
     * @memberof Payment
     */
    text?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Payment
     */
    isActive: boolean;
    /**
     * 
     * @type {string}
     * @memberof Payment
     */
    status?: string;
    /**
     * 
     * @type {Array<NewStatusType>}
     * @memberof Payment
     */
    allowedNewStatusTypes?: Array<NewStatusType>;
    /**
     * 
     * @type {string}
     * @memberof Payment
     */
    statusDetails?: string;
    /**
     * 
     * @type {string}
     * @memberof Payment
     */
    productType?: string;
    /**
     * 
     * @type {string}
     * @memberof Payment
     */
    paymentType?: string;
    /**
     * 
     * @type {number}
     * @memberof Payment
     */
    paymentNumber: number;
    /**
     * 
     * @type {string}
     * @memberof Payment
     */
    beneficiaryName?: string;
}

/**
 * Check if a given object implements the Payment interface.
 */
export function instanceOfPayment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "dueDate" in value;
    isInstance = isInstance && "isActive" in value;
    isInstance = isInstance && "paymentNumber" in value;

    return isInstance;
}

export function PaymentFromJSON(json: any): Payment {
    return PaymentFromJSONTyped(json, false);
}

export function PaymentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Payment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'paymentId': !exists(json, 'paymentId') ? undefined : json['paymentId'],
        'recipientAccountNumber': !exists(json, 'recipientAccountNumber') ? undefined : json['recipientAccountNumber'],
        'amount': json['amount'],
        'dueDate': (new Date(json['dueDate'])),
        'kid': !exists(json, 'kid') ? undefined : json['kid'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'isActive': json['isActive'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'allowedNewStatusTypes': !exists(json, 'allowedNewStatusTypes') ? undefined : ((json['allowedNewStatusTypes'] as Array<any>).map(NewStatusTypeFromJSON)),
        'statusDetails': !exists(json, 'statusDetails') ? undefined : json['statusDetails'],
        'productType': !exists(json, 'productType') ? undefined : json['productType'],
        'paymentType': !exists(json, 'paymentType') ? undefined : json['paymentType'],
        'paymentNumber': json['paymentNumber'],
        'beneficiaryName': !exists(json, 'beneficiaryName') ? undefined : json['beneficiaryName'],
    };
}

export function PaymentToJSON(value?: Payment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'paymentId': value.paymentId,
        'recipientAccountNumber': value.recipientAccountNumber,
        'amount': value.amount,
        'dueDate': (value.dueDate.toISOString()),
        'kid': value.kid,
        'text': value.text,
        'isActive': value.isActive,
        'status': value.status,
        'allowedNewStatusTypes': value.allowedNewStatusTypes === undefined ? undefined : ((value.allowedNewStatusTypes as Array<any>).map(NewStatusTypeToJSON)),
        'statusDetails': value.statusDetails,
        'productType': value.productType,
        'paymentType': value.paymentType,
        'paymentNumber': value.paymentNumber,
        'beneficiaryName': value.beneficiaryName,
    };
}

