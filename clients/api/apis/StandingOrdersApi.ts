/* tslint:disable */
/* eslint-disable */
/**
 * SBanken
 * SBanken Beta API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: rhuan@barreto.work
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListResultOfStandingOrder,
} from '../models';
import {
    ListResultOfStandingOrderFromJSON,
    ListResultOfStandingOrderToJSON,
} from '../models';

export interface StandingOrdersListStandingOrdersRequest {
    accountId: string | null;
}

/**
 * 
 */
export class StandingOrdersApi extends runtime.BaseAPI {

    /**
     * Lists the standing orders for repeated transfers and payments.
     */
    async standingOrdersListStandingOrdersRaw(requestParameters: StandingOrdersListStandingOrdersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListResultOfStandingOrder>> {
        if (requestParameters.accountId === null || requestParameters.accountId === undefined) {
            throw new runtime.RequiredError('accountId','Required parameter requestParameters.accountId was null or undefined when calling standingOrdersListStandingOrders.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/v2/StandingOrders/{accountId}`.replace(`{${"accountId"}}`, encodeURIComponent(String(requestParameters.accountId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListResultOfStandingOrderFromJSON(jsonValue));
    }

    /**
     * Lists the standing orders for repeated transfers and payments.
     */
    async standingOrdersListStandingOrders(requestParameters: StandingOrdersListStandingOrdersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListResultOfStandingOrder> {
        const response = await this.standingOrdersListStandingOrdersRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
